heat_template_version: 2015-04-30
description: Template to setup and deploy a Standalone vSBC compute instances

##################################################################################################
# 1. Sample Environment content to be sourced with this template:
#
#    parameters:
#
#      # System Settings
#      image:           myImage
#      flavor:          cloudSBC.lite
#      security_group:  vSBC_security_group
#
#      # Private Network Settings
#      provider_network_mgt0: mgt0
#      provider_network_ha:   ha0
#      provider_network_pkt0: pkt0
#      provider_network_pkt1: pkt1
#
# 2. To Enable/Disable SR-IOV on any interface, search for '<interfaceName> EDIT:'
#    and follow instructions there
#
#    E.g. To Enable SRIOV on Packet Port 0 (pkt0):
#         Search for: 'pkt0 EDIT:' (without quotes)
#         (Replace pkt0 with mgt0, ha0 or pkt1 as applicable)
#
#    Sample code segment:
#      # pkt0 EDIT: Below line:
#      #   SR-IOV support:    uncomment
#      #   No SR-IOV support: comment
#      #binding:vnic_type: direct
#
#
# 3. Additional private IPs will be queried by the template when launched as a comma-separeted input. 
#    These IP addresses will be queried inside template at multiple places, and the procedure for the same is given in next point.
#    Make sure that the comma-separated input doesn't have spaces between them. That would lead to template-load error.
#
# 4. Procedure for adding additional IP address to ports.
#
#    This involves the following steps which are described in detail below:
#       - Private port creation and 
#       - Meta data update.
#
#    Procedure:
#
#    a) Search for the tags "EDIT_PRIVATE_PORT_CREATION_PKT0" and "EDIT_PRIVATE_PORT_CREATION_PKT1"
#       * Add additional IP address to the PKT ports by uncommenting out
#         "- ip_address:" parameters and query the IP address from the list input as give below:
#
#         - ip_address: {get_param: [pktXAdditionalIPs,0]}
#
#       * Where X : { 0 for Pkt0, 1 for Pkt1 }
#
#       * Repeat this multiple times based on number
#         of IP addresses to be assigned to the port
#
#    b) Appending Metadata content of server above the section METADATA_APPEND_ABOVE.
#
#         ALT_PKTX_01: { "IFName": "YYY", "IP": {get_param: [pktXAdditionalIPs,0]}}
#
#         * Where:
#          - X can be 0 or 1.
#          - ALT_PKTX_01 can be replaced with any valid name for alternate IP.
#          - YYY is the corresponding IF name of PKT port. Eg: IF2 for Pkt0
#
##################################################################################################

parameter_groups:
- label: System Settings
  description: System Level Settings
  parameters:
  - image
  - flavor
  - security_group
  - sbc_system_name
  - personality

- label: Network Settings
  description: Network Settings
  parameters:
  - provider_network_mgt0
  - provider_network_ha
  - provider_network_pkt0
  - provider_network_pkt1

  
- label: mgt0 DHCP Settings
  description: DHCP Settings for Management Port
  parameters:
  - isDhcpEnabledOnMgt0
  - mgt0IPAddress
  - mgt0SubnetPrefix
  - mgt0Gateway

- label: ha0 DHCP Settings
  description: DHCP Settings for High Availability Port
  parameters:
  - isDhcpEnabledOnHa0
  - ha0IPAddress
  - ha0SubnetPrefix
  - ha0Gateway

- label: pkt0 DHCP Settings
  description: DHCP Settings for Packet Port 0
  parameters:
  - isDhcpEnabledOnPkt0
  - pkt0IPAddress
  - pkt0SubnetPrefix
  - pkt0Gateway
  - vlanIdPkt0
#  - pkt0AdditionalIPs

- label: pkt1 DHCP Settings
  description: DHCP Settings for Packet Port 1
  parameters:
  - isDhcpEnabledOnPkt1
  - pkt1IPAddress
  - pkt1SubnetPrefix
  - pkt1Gateway
  - vlanIdPkt1
#  - pkt1AdditionalIPs

- label: Instance Specific Settings
  description: Instance Specific Settings
  parameters:
  - sbc_ceName
  - sbc_ceRole
  - sbc_rgIp

- label: EMS Settings
  description: EMS Settings
  parameters:
  - ems_user_name
  - ems_password
  - ems_ip_1
  - ems_ip_2
  - cluster_id
  - download_config
  - download_config_name


parameters:

############################
# System Level Settings
############################

  image:
    type: string
    label: Image Name
    description: Image to be used for launching the instance(s)
    constraints:
#      - custom_constraint: cSBC_V08.00.00R000

  flavor:
    type: string
    label: Flavor
    description: Flavor to be used for instance(s)
#    default: ISBC4VCPU

  security_group:
    type: string
    label: Security Group
    description: Security group of instance(s)
#    default: SONUS

  sbc_system_name:
    type: string
    label: SBC System Name
    description: SBC system name
    constraints:
      - length: { min: 0, max: 26 }
        description: "Enter valid system name. Length of this string should be less than 26"
      - allowed_pattern: "^[A-Za-z]{1}[-A-Za-z0-9]*[A-Za-z0-9]{1}$"
        description: "Enter valid system name. Regex: ^[A-Za-z]{1}[-A-Za-z0-9]*[A-Za-z0-9]{1}$ "
    default : ISBC
  
  personality:
    type: string
    label: SBC Personality Type
    description: Configures SBC instance to be Signaling,Media or Integrated node.
    default: isbc
    constraints:
      - allowed_values: [ssbc,msbc,isbc]

############################
# Network Settings
############################

  provider_network_mgt0:
    type: string
    label: Management Port Provider Network Name or ID
    description: Name/ID of private network for mgt0.
    default: PR_MGMT

  provider_network_ha:
    type: string
    label: HA Port Private Network Name or ID
    description: Name/ID of private network for ha0.
    default: ha

  provider_network_pkt0:
    type: string
    label: Packet Port 0 Network Name or ID
    description: Name/ID of private network for pkt0.
    default: sriov_pkt2

  provider_network_pkt1:
    type: string
    label: Packet Port 1 Network Name or ID
    description: Name/ID of private network for pkt1.
    default: sriov_pkt3

      
###########################################################
# VLAN ID PKT interfaces
# Keeping it a string value instead of integer, as we need
# to support None value
###########################################################

  vlanIdPkt0:
    type: string
    label: Packet Port 0 VLAN ID
    description: Packet Port 0 VLAN ID
    default : 626

  vlanIdPkt1:
    type: string
    label: Packet Port 1 VLAN ID
    description: Packet Port 1 VLAN ID
    default : 627

############################
# Instance Specific Settings
############################
  sbc_ceName:
    type: string
    label: SBC Instance Name
    description: SBC Instance name.
    default: "vsbc1"
    constraints:
      - length: { min: 0, max: 63 }
        description: "Enter valid active instance name. Length of this string should be less than 63"
      - allowed_pattern: "^[A-Za-z]{1}[-A-Za-z0-9.]*[A-Za-z0-9]{1}$"
        description: "Enter valid active instance name. Regex: ^[A-Za-z]{1}[-A-Za-z0-9.]*[A-Za-z0-9]{1}$ "

  sbc_ceRole:
    type: string
    label: SBC Configured CE Role
    description: SBC Configured CE Role.
    default: "ACTIVE"
    constraints:
      - length: { min: 0, max: 8 }
        description: "Enter valid instance role. Role can be ACTIVE or STANDBY"
      - allowed_pattern: "^[A-Za-z]{1}[-A-Za-z0-9.]*[A-Za-z0-9]{1}$"
        description: "Enter valid instance role. Regex: ^[A-Za-z]{1}[-A-Za-z0-9.]*[A-Za-z0-9]{1}$ "
      - allowed_values: [ACTIVE,STANDBY]

  sbc_rgIp:
    type: string
    label: HA port IP address of one of the members of SBC Redundancy Group(RG). (Note - Provide 169.254.88.1 for the first node of RG)
    description: SBC RG is formed by communicating over the provided IP. When adding 3rd or subsequent instance to RG, can provide HA IP of any of the instances that are up and running.
    default: "192.168.2.111"
    constraints:
      - length: { min: 0, max: 63 }
        description: "Enter valid IP."
      - allowed_pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
        description: "Enter valid cluster IP. Regex: ^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"

################
# EMS Settings
################
  ems_user_name:
    type: string
    label: EMS User Name
    description: User name for registering with EMS
    default: "None"

  ems_password:
    type: string
    label: EMS Password
    description: EMS registration password
    hidden: true
    default: "None"

  ems_ip_1:
    type: string
    label: EMS IP 1
    description: EMS IP Address 1 - e.g. 10.52.13.40 (No quotes required)
    default: "None"

  ems_ip_2:
    type: string
    label: EMS IP 2
    description: EMS IP Address 2 - e.g. 51.12.30.24 (No quotes required)
    default: "None"

  cluster_id:
    type: string
    label: Cluster ID
    description: Cluster/VNF ID value from EMS Cluster Mgmt.
    default: "None"

  download_config:
    type: string
    label: Download Configuration from EMS
    description: Download Configuration from EMS
    default: False
    constraints:
      - allowed_values: [True,False]

  download_config_name:
    type: string
    label: Download Configuration file name
    description: Download Configuration file name
    default: "None"


##################################
# IP address of the Non-DHCP ports
##################################
  mgt0IPAddress:
    type: string
    label: Management Port IP Addresses
    description: IPV4 and IPV6 addresses for mgt0 port. Provide address in following manner - IPV4,IPV6
    default : 10.34.224.111

  ha0IPAddress:
    type: string
    label: High Availability Port IP Address
    description: IPV4 address for ha0 port
    default : 192.168.2.111

  pkt0IPAddress:
    type: string
    label: Packet Port 0 IP Address
    description: IPV4 and IPV6 addresses for pkt0 port. Provide address in following manner - IPV4,IPV6
    default : 10.34.226.111

  pkt1IPAddress:
    type: string
    label: Packet Port 1 IP Address
    description: IPV4 and IPV6 addresses for pkt1 port. Provide address in following manner - IPV4,IPV6
    default : 10.34.227.111
    
####################################
# Netmask for each Non-DHCP networks
####################################
  mgt0SubnetPrefix:
    type: string
    label: Management Port Subnet Prefix
    description: Subnet Prefix for mgt0 port. Provide prefix values in following manner - PrefixV4,PrefixV6
    default : 24

  ha0SubnetPrefix:
    type: string
    label: High Availability Port Subnet Prefix
    description: Subnet Prefix for ha0 port
    default : 24

  pkt0SubnetPrefix:
    type: string
    label: Packet Port 0 Subnet Prefix. Provide prefix values in following manner - PrefixV4,PrefixV6
    description: Subnet Prefix for pkt0 port
    default : 24

  pkt1SubnetPrefix:
    type: string
    label: Packet Port 1 Subnet Prefix. Provide prefix values in following manner - PrefixV4,PrefixV6
    description: Subnet Prefix for pkt1 port
    default : 24

###############################
# Non DHCP Network's gateway IP
###############################
# comma_delimited_list

  mgt0Gateway:
    type: string
    label: Management Port Gateway IP
    description: Gateway IP Address for mgt0 port. Provide gateway address in following manner - IPV4,IPV6
    default : 10.34.224.1

  ha0Gateway:
    type: string
    label: High Availability Port Gateway IP
    description: Gateway IP Address for ha0 port
    default : 192.168.2.1

  pkt0Gateway:
    type: string
    label: Packet Port 0 Gateway IP
    description: Gateway IP Address for pkt0 port. Provide gateway address in following manner - IPV4,IPV6
    default : 10.34.226.1

  pkt1Gateway:
    type: string
    label: Packet Port 1 Gateway IP
    description: Gateway IP Address for pkt1 port. Provide gateway address in following manner - IPV4,IPV6 
    default : 10.34.227.1

###############################
# DHCP flags
###############################

  isDhcpEnabledOnMgt0:
    type: string
    label: Is DHCP enabled on Mgt0 Subnet?
    description: Is DHCP enabled on Mgt0 Subnet?
    default : False
    constraints:
      - allowed_values: [True,False]

  isDhcpEnabledOnHa0:
    type: string
    label: Is DHCP enabled on Ha0 Subnet?
    description: Is DHCP enabled on Ha0 Subnet?
    default : False
    constraints:
      - allowed_values: [True,False]

  isDhcpEnabledOnPkt0:
    type: string
    label: Is DHCP enabled on Pkt0 Subnet?
    description: Is DHCP enabled on Pkt0 Subnet?
    default : False
    constraints:
      - allowed_values: [True,False]

  isDhcpEnabledOnPkt1:
    type: string
    label: Is DHCP enabled on Pkt1 Subnet?
    description: Is DHCP enabled on Pkt1 Subnet?
    default : False
    constraints:
      - allowed_values: [True,False]

###################
# Alternate IP list
###################

#  pkt0AdditionalIPs:
#    type: string
#    label: comma separated list of alternate IPs for pkt0
#    description: comma separated list of alternate IPs for pkt0
#    default: 10.30.20.22

#  pkt1AdditionalIPs:
#    type: comma_delimited_list
#    label: comma separated list of alternate IPs for pkt1
#    description: comma separated list of alternate IPs for pkt1
#    default: "10.30.22.32,10.30.24.32"


# Resource definitions for all openstack objects to be configured during
# template execution
resources:

  # Create active vSBC instance
  vSBC_ACTIVE:
    type: OS::Nova::Server
    properties:
      name: { get_param: "OS::stack_name" }
      image: { get_param: image }
      flavor: { get_param: flavor }
      config_drive: True
      availability_zone: ansible

      # Attach previously created network ports to the instance
      networks:
        - port: { get_resource: mgt0_port1 }
        - port: { get_resource: ha0_port1 }
        - port: { get_resource: pkt0_port1 }
        - port: { get_resource: pkt1_port1 }

      # Publish the assigned floating IP addresses with appended subnet mask to the openstack metadata service.
      # Subnet prefix for floating ips not used - hard coded to 32 for consistencey.
      metadata:
        IF0:
             str_replace:
               template: |
                 { "Port": "$port_name",
                   "DHCP": "$dhcp_flag",
                   "GWV4": "$gateway_ip_v4", 
                   "IPV4": "$ip_address_v4"
                 }
               params:
                 $port_name:  "Mgt0"
                 $dhcp_flag:  { get_param: isDhcpEnabledOnMgt0}
                 $gateway_ip_v4: { get_param: mgt0Gateway }
                 $ip_address_v4: { list_join: ['/', [ { get_param: mgt0IPAddress}, { get_param: mgt0SubnetPrefix}]] }

        IF1:
             str_replace:
               template: |
                 { "Port": "$port_name",
                   "DHCP": "$dhcp_flag",
                   "GW$ip_version": "$gateway_ip", 
                   "IP$ip_version": "$ip_address"
                 }
               params:
                 $port_name:  "Ha0"
                 $dhcp_flag:  { get_param: isDhcpEnabledOnHa0}
                 $ip_version: "V4"
                 $gateway_ip: { get_param: ha0Gateway }
                 $ip_address: { list_join: ['/', [ { get_param: ha0IPAddress }, { get_param: ha0SubnetPrefix}]] }

        IF2:
             str_replace:
               template: |
                 { "Port": "$port_name",
                   "GWV4": "$gateway_ip_v4", 
                   "IPV4": "$ip_address_v4",
                   "VlanId": "$vlan_id"
                 }
               params:
                 $port_name:  "Pkt0"
                 $gateway_ip_v4: { get_param: pkt0Gateway }
                 $ip_address_v4: { list_join: ['/', [ { get_param: pkt0IPAddress }, { get_param: pkt0SubnetPrefix}]] }
                 $vlan_id:    { get_param: vlanIdPkt0}

        IF3:
             str_replace:
               template: |
                 { "Port": "$port_name",
                   "GWV4": "$gateway_ip_v4",
                   "IPV4": "$ip_address_v4",
                   "VlanId": "$vlan_id"
                 }
               params:
                 $port_name:  "Pkt1"
                 $gateway_ip_v4: { get_param: pkt1Gateway }
                 $ip_address_v4: { list_join: ['/', [ { get_param: pkt1IPAddress }, { get_param: pkt1SubnetPrefix}]] }
                 $vlan_id:    { get_param: vlanIdPkt1 }

                 
#        PKT0_ALT_01: { "IFName": "IF2", "IP": {get_param: pkt0AdditionalIPs} }
#        PKT1_ALT_01: { "IFName": "IF3", "IP": {get_param: [pkt1AdditionalIPs,0]} }
#        PKT1_ALT_02: { "IFName": "IF4", "IP": {get_param: [pkt1AdditionalIPs,1]} }

      # METADATA_APPEND_ABOVE
      # Make sure that the indentation is maintained same as the existing
      # metadata elements. Remove only pound sign above. Don't remove spaces.

      # Set the format to RAW to pass data directly as userdata set the floating and virtual IP counts
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
                #cloud-config
                ### USER EDITABLE SECTION FOR SSH KEYS ###
                users:
                    - name: admin
                      ssh-authorized-keys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4oGIi+0mRS9Q25ln5/gKe1mmR7cfVuFxRQONVbjq8y+JB0g2T49b1Bf8xRhyhkKgdbIbEWdcmboSpTegt6zM0rz6Yw/73c3NVy60CX47t55GCCFYXxt3uwgRlN/9KX1mETCYOSD5AZ7e9YXvbd6/hUKkK/o8Zrhch9ckR2nVSe0v1wob4MMhmC1e9LV5tvk6zAIdmTWOYcrg0Yd6yHRQbNjlVFpQ147TPGy12+tDytqEW+09DQZqvhuiwSyxk3lBlNJYfCT2VidsS2+MQYD+t2REc65vcq/EvXuyuwpvv/IIjX2BBMCG7fMXkGh0wnIPoHbUCNfq1Zr2JGqZ6D8GIQ==
                      plain_text_passwd: admin
                      lock_passwd: false
                    - name: linuxadmin
                      ssh-authorized-keys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4oGIi+0mRS9Q25ln5/gKe1mmR7cfVuFxRQONVbjq8y+JB0g2T49b1Bf8xRhyhkKgdbIbEWdcmboSpTegt6zM0rz6Yw/73c3NVy60CX47t55GCCFYXxt3uwgRlN/9KX1mETCYOSD5AZ7e9YXvbd6/hUKkK/o8Zrhch9ckR2nVSe0v1wob4MMhmC1e9LV5tvk6zAIdmTWOYcrg0Yd6yHRQbNjlVFpQ147TPGy12+tDytqEW+09DQZqvhuiwSyxk3lBlNJYfCT2VidsS2+MQYD+t2REc65vcq/EvXuyuwpvv/IIjX2BBMCG7fMXkGh0wnIPoHbUCNfq1Zr2JGqZ6D8GIQ==
                      plain_text_passwd: sonus
                      lock_passwd: false
                    - name: root
                      ssh-authorized-keys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4oGIi+0mRS9Q25ln5/gKe1mmR7cfVuFxRQONVbjq8y+JB0g2T49b1Bf8xRhyhkKgdbIbEWdcmboSpTegt6zM0rz6Yw/73c3NVy60CX47t55GCCFYXxt3uwgRlN/9KX1mETCYOSD5AZ7e9YXvbd6/hUKkK/o8Zrhch9ckR2nVSe0v1wob4MMhmC1e9LV5tvk6zAIdmTWOYcrg0Yd6yHRQbNjlVFpQ147TPGy12+tDytqEW+09DQZqvhuiwSyxk3lBlNJYfCT2VidsS2+MQYD+t2REc65vcq/EvXuyuwpvv/IIjX2BBMCG7fMXkGh0wnIPoHbUCNfq1Zr2JGqZ6D8GIQ==
                      plain_text_passwd: sonus1                    
                      lock_passwd: false
                runcmd:
                    - [ usermod, -p, '$6$io3njQos$gZtBJ4MazQeWC0beqQwRPUDZCQcKXhMr2B8QLWYGajchR2BtkyHPvBTCQj0LctHAFaYTwbsIsUkm12ta4IoLe/', linuxadmin ]
                    - sed -i -e "/^AllowUsers/s/\slinuxadmin\(\s\|$\)/ /g" -e "/^AllowUsers/s/\sroot\(\s\|$\)/ /g" /etc/ssh/sshd_config
                    - sed -i "/^AllowUsers/s/AllowUsers /AllowUsers root linuxadmin /" /etc/ssh/sshd_config
                    - sed -i "/PasswordAuthentication no/s/PasswordAuthentication no/PasswordAuthentication yes/" /etc/ssh/sshd_config
                    - sed -i "/^PermitRootLogin/s/ no/ yes/" /etc/ssh/sshd_config
                    - sed -i "s/allowSshAccess=n/allowSshAccess=y/" /opt/sonus/conf/sbx.conf
                write_files:
                -   content: |
                        {
                          "CEName"                   : "$ce_name",
                          "SystemName"               : "$system_name",
                          "SbcPersonalityType"       : "$personality",
                          "EmsUsername"              : "$ems_user_name",
                          "EmsPassword"              : "$ems_password",
                          "EmsIP"                    : [ "$ems_ip_1", "$ems_ip_2" ],
                          "EmsDownloadConfig"        : "$downloadConfig",
                          "ConfigDownloadName"       : "$configName",
                          "CERole"                   : "$ce_role",
                          "KeepAdminUser"            : "true",
                          "ClusterIp"                : "$cluster_ip",
                          "TemplateName"             : "heatRgNoDhcpDualStack.yaml",
                          "TemplateVersion"          : "V06.01.00A916",
                          "EmsPrivateNodeParameters" : { "cluster_id": "$cluster_id","vnfc_id":"$vnfc_id"}
                        }
                    path: /opt/sonus/conf/userData.json

          params:
              $ce_name:        { get_param: sbc_ceName }
              $system_name:    { get_param: sbc_system_name }
              $personality:    { get_param: personality }
              $ems_user_name:  { get_param: ems_user_name }
              $ems_password:   { get_param: ems_password }
              $ems_ip_1:       { get_param: ems_ip_1 }
              $ems_ip_2:       { get_param: ems_ip_2 }
              $cluster_id:     { get_param: cluster_id }
              $downloadConfig: { get_param: download_config }
              $configName:     { get_param: download_config_name }
              $ce_role:        { get_param: sbc_ceRole }
              $cluster_ip:     { get_param: sbc_rgIp }
              $vnfc_id:        { list_join: ['-', [ { get_param: "OS::stack_name" }, { get_param: cluster_id }, '1']] }


  # Create the four required virtual nics (ports) to attach to virtual SBC instance 1

  # Private Port Creation.

  mgt0_port1:
    type: OS::Neutron::Port
    properties:
      network: { get_param : provider_network_mgt0 }
      fixed_ips:
        - ip_address: { get_param: mgt0IPAddress}
       # - ip_address: { get_param: [mgt0IPAddress,1]}

      # mgt0 EDIT: Below line:
      #   SR-IOV support:    uncomment
      #   No SR-IOV support: comment
      #binding:vnic_type: direct
      security_groups:
        - { get_param: security_group }

  ha0_port1:
    type: OS::Neutron::Port
    properties:
      network: { get_param : provider_network_ha }
      fixed_ips:
        - ip_address: { get_param: ha0IPAddress}

      # ha0 EDIT: Below line:
      #   SR-IOV support:    uncomment
      #   No SR-IOV support: comment
      #binding:vnic_type: direct

  # EDIT_PRIVATE_PORT_CREATION_PKT0
  pkt0_port1:
    type: OS::Neutron::Port
    properties:
      network: { get_param : provider_network_pkt0 }
      fixed_ips:
        - ip_address: { get_param: pkt0IPAddress}
        #- ip_address: { get_param: [pkt0IPAddress,1]}
        #- ip_address: { get_param: [pkt0IPAddress,2]}
        #- ip_address: {get_param: pkt0AdditionalIPs}
        #- ip_address: {get_param: [pkt0AdditionalIPs,1]}

      # pkt0 EDIT: Below line:
      #   SR-IOV support:    uncomment
      #   No SR-IOV support: comment
      binding:vnic_type: direct
      security_groups:
        - { get_param: security_group }

  # EDIT_PRIVATE_PORT_CREATION_PKT1
  pkt1_port1:
    type: OS::Neutron::Port
    properties:
      network: { get_param : provider_network_pkt1 }
      fixed_ips:
        - ip_address: { get_param: pkt1IPAddress}
        #- ip_address: { get_param: [pkt1IPAddress,1]}
        #- ip_address: {get_param: [pkt1AdditionalIPs,0]}
        #- ip_address: {get_param: [pkt1AdditionalIPs,1]}

      # pkt1 EDIT: Below line:
      #   SR-IOV support:    uncomment
      #   No SR-IOV support: comment
      binding:vnic_type: direct
      security_groups:
        - { get_param: security_group }
       
# output some stuff for debug
outputs:
  instance_name:
    description: Name of the instance
    value: { get_attr: [vSBC_ACTIVE, name] }

